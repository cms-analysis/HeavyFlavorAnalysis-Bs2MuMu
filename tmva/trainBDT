#!/usr/bin/env perl
#
# Usage: trainBDT [-s 2011] [-f tmva-trees-0] [-o 1020] [-v "pt:eta:maxdoca:fls3d"] [-p ":nCuts=20:BoostType=AdaBoost:AdaBoostBeta=1.0"]
# ------

use Getopt::Std;
getopts('a:dD:f:ho:p:s:t:v:');

use lib '/shome/ursl/perl/modules/Tie-IxHash-1.23/lib';
use Tie::IxHash;

if ($opt_h) {
    print "usage: ./trainBDT -s 2011 -f tmva-trees-3 -o 5000 -v \"pt:eta:maxdoca:fls3d:alpha:pvip:pvips:m1iso:m2iso\" -p \"!H:V:NTrees=200:nCuts=20:BoostType=AdaBoost:AdaBoostBeta=1.0:MaxDepth=3:NNodesMax=100000:nEventsMin=100\" \n";
    die"\n";
}


# -- initialize defaults
my $directory = "/scratch/ursl/bdt"; 
if ($opt_D) {
    $directory = $opt_D; 
}

my $offset = 1000; 
if ($opt_o) {
    $offset = $opt_o; 
}

my $file = "tmva-trees-22"; 
if ($opt_f) {
    $file = $opt_f; 
}

my $vars = "pt:eta:alpha:fls3d:maxdoca:chi2dof:pvip:pvips:iso:m1iso:m2iso:docatrk:closetrk";
if ($opt_v) {
    $vars = $opt_v; 
}

my $pars = ""; # -- use TMVA defaults
if ($opt_v) {
    $pars = $opt_p; 
}

# -- batch processing of many setups
if ($opt_a) {
    if (!$opt_t) {die "provide a tar file\n";}
    &callA(); 
}



tie %jobs, "Tie::IxHash";

%jobs = (
    "2011barrel" => "0", 
    "2011endcap" => "0", 
    "2012barrel" => "0", 
    "2012endcap" => "0", 
    );

# -- run the jobs
foreach $j (keys %jobs) {
    # -- if a subset is requested, skip all other 
    if ($opt_s && !($j =~ /$opt_s/)) {next;}

    if ($j =~ /2011/) {
	$year = 2011; 
    } else {
	$year = 2012; 
    }
    if ($j =~ /barrel/) {
	$channel = 0;
    } else {
	$channel = 1; 
    }
#    $version  = $offset + $jobs{$j};
    $version  = $offset;
    $tmvaFile = $directory . "/" . $file . "-$year" . ".root"; 
    $command = "root -b -q 'runBDT.C($version, \"$tmvaFile\", \"$vars\", \"$pars\", $channel); > TMVA-$version.log' ";
    print "$command\n";
    if (!$opt_d) {system("$command"); }
}


# ----------------------------------------------------------------------
sub callA() {
    
    @setTrees  = ("NTrees",        100,  200,  400,  600, 800, 1000);   $njTrees = $#setTrees;
    @setCuts   = ("nCuts",          25,   50, 100);                     $njCuts = $#setCuts;
    @setBeta   = ("AdaBoostBeta", 0.25, 0.50, 0.75, 1.0, 1.2, 1.4);     $njBeta = $#setBeta;
    @setDepth  = ("MaxDepth",        2,    3,    4,   5);               $njDepth = $#setDepth;
    @setEvents = ("nEventsMin",     20,   50,  100,  200);              $njEvents = $#setEvents;
    my $njTotal = $njTrees * $njCuts * $njBeta * $njDepth * $njEvents; 

    my $loffset = $opt_a; 

    for ($jTrees = 1; $jTrees <= $njTrees; $jTrees++) {
	for ($jDepth = 1; $jDepth <= $njDepth; $jDepth++) {
	    for ($jBeta = 1; $jBeta <= $njBeta; $jBeta++) {
		for ($jCuts = 1; $jCuts <= $njCuts; $jCuts++) {    
		    for ($jEvents = 1; $jEvents <= $njEvents; $jEvents++) {    
			$pars = sprintf(":NTrees=%d:nCuts=%d:MaxDepth=%d:nEventsMin=%d:BoostType=AdaBoost:AdaBoostBeta=%3.2f", 
					$setTrees[$jTrees], $setCuts[$jCuts], $setDepth[$jDepth], $setEvents[$jEvents], $setBeta[$jBeta]); 
			$command = "./trainBDT -v $vars -f $file -s $opt_s -p $pars -o $loffset";
			#if ($jTrees == 1 && $jDepth == 1 && $jCuts == 1 && $jEvents == 1 && $jBeta == 1) {
			$runCommand = "run -c ./runBDT.csh -m batch -t $opt_t -q short.q -x '$command  ' $loffset";
			print "$runCommand\n";
			if (!$opt_d) {
			    system("$runCommand");
			}
			#}
			$loffset++;
		    }
		}
	    }
	}
    }

    die "\n";

}
