#!/usr/bin/env perl

# Usage: splitCheckedChain [-c] [-n 100000] chain1 chain2 chain3 ...
# ------
#            -n specifies how many events should go into one split chain
#            -c counts how many events were put into a chain (for verification)
#
# 2010/11/22 first shot
#
# ----------------------------------------------------------------------
# Send all questions, wishes and complaints to the 
#
# Author    Urs Langenegger <urs.langenegger@psi.ch>
# ----------------------------------------------------------------------

use Getopt::Std;
getopts('cn:');


if ($opt_c) {
    my $totalcnt = 0; 
    foreach $file (@ARGV) {
	$cnt = countChain($file); 
	$totalcnt += $cnt;
	print "$file $cnt\n";
    }
    die "Total: $totalcnt\n";
}

foreach $file (@ARGV) {
    &splitChain($file, $opt_n); 
}


# ----------------------------------------------------------------------
sub splitChain() {
    ($cfile, $nmax) = @_; 
    open(IN, "$cfile") || die "Cannot open $cfile\n";
    my $ccnt= "00";
    open(OUT, ">$cfile-$ccnt") || die "Cannot open $cfile-$ccnt\n";
    @lines = <IN>; 
    close(IN); 
    my $cnt = 0; 
    foreach $line (@lines) {
	($fname, $fcnt) = split(/\s{1,99}/, $line);
	if ($cnt + $fcnt > $nmax) {
	    print "$cfile-$ccnt: $cnt\n";
	    close(OUT); 
	    $ccnt++;
	    open(OUT, ">$cfile-$ccnt") || die "Cannot open $cfile-$ccnt\n";
	    $cnt = 0; 
	}
	print OUT "$fname $fcnt\n";
	$cnt += $fcnt; 
    }
    print "$cfile-$ccnt: $cnt\n";
    close(OUT); 
}


# ----------------------------------------------------------------------
sub countChain() {
    ($cfile, $nmax) = @_; 
    open(IN, "$cfile") || die "Cannot open $cfile\n";
    @lines = <IN>; 
    close(IN); 
    my $cnt = 0; 
    foreach $line (@lines) {
	($fname, $fcnt) = split(/\s{1,99}/, $line);
	$cnt += $fcnt; 
    }
    return $cnt;
}
